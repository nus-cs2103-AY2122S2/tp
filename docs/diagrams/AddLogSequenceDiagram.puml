@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":AddLogCommandParser" as AddLogCommandParser LOGIC_COLOR
participant "a:AddLogCommand" as AddLogCommand LOGIC_COLOR
participant "d:AddLogDescriptor" as AddLogDescriptor LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
participant "newLog:Log" as newLog LOGIC_COLOR
participant "addedLogPerson:Person" as addedLogPerson LOGIC_COLOR
end box


box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("addlog JOHN DOE ttl/some log title")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("addlog JOHN DOE ttl/some log title")
activate AddressBookParser

create AddLogCommandParser
AddressBookParser -> AddLogCommandParser
activate AddLogCommandParser

AddLogCommandParser --> AddressBookParser
deactivate AddLogCommandParser

AddressBookParser -> AddLogCommandParser : parse("JOHN DOE ttl/some log title")
activate AddLogCommandParser

create AddLogDescriptor
AddLogCommandParser -> AddLogDescriptor
activate AddLogDescriptor

AddLogDescriptor -> AddLogCommandParser : d
deactivate AddLogDescriptor

create AddLogCommand
AddLogCommandParser -> AddLogCommand
activate AddLogCommand

AddLogCommand --> AddLogCommandParser : a
deactivate AddLogCommand

AddLogCommandParser --> AddressBookParser : a
deactivate AddLogCommandParser

'Hidden arrow to position the destroy marker below the end of the activation bar.
AddLogCommandParser -[hidden]-> AddressBookParser
destroy AddLogCommandParser

AddressBookParser --> LogicManager : a
deactivate AddressBookParser

LogicManager -> AddLogCommand : execute()
activate AddLogCommand

AddLogCommand -> Model : getFilteredPersonList()
activate Model

Model --> AddLogCommand : List<Person>
deactivate Model

AddLogCommand -> AddLogCommand : createAddedLogPerson()
activate AddLogCommand

AddLogCommand -> AddLogDescriptor : getLogsAfterAdd()
activate AddLogDescriptor

create newLog
AddLogDescriptor -> newLog
activate newLog
newLog -> AddLogDescriptor
deactivate newLog

AddLogDescriptor -> AddLogCommand : List<Log>
deactivate AddLogDescriptor

create addedLogPerson
AddLogCommand -> addedLogPerson
activate addedLogPerson
addedLogPerson -> AddLogCommand
deactivate addedLogPerson

AddLogCommand -> AddLogCommand : addedLogPerson
deactivate AddLogCommand

AddLogCommand -> Model : setPerson(addedLogPerson)
activate Model
deactivate Model

create CommandResult
AddLogCommand -> CommandResult
activate CommandResult

CommandResult --> AddLogCommand
deactivate CommandResult

AddLogCommand --> LogicManager : result
deactivate AddLogCommand

[<--LogicManager
deactivate LogicManager
@enduml
