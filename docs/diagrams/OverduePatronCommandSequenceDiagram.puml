@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":LibTaskParser" as LibTaskParser LOGIC_COLOR
participant ":PatronCommandParser" as PatronCommandParser LOGIC_COLOR
participant "r:OverduePatronCommand" as OverduePatronCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("patron \noverdue")
activate LogicManager

LogicManager -> LibTaskParser : parseCommand("patron \noverdue")
activate LibTaskParser

create PatronCommandParser
LibTaskParser -> PatronCommandParser
activate PatronCommandParser

PatronCommandParser --> LibTaskParser
deactivate PatronCommandParser

LibTaskParser -> PatronCommandParser : parse("overdue")
activate PatronCommandParser

create OverduePatronCommand
PatronCommandParser -> OverduePatronCommand
activate OverduePatronCommand

OverduePatronCommand --> PatronCommandParser : r
deactivate OverduePatronCommand

PatronCommandParser --> LibTaskParser : r
deactivate PatronCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
PatronCommandParser -[hidden]-> LibTaskParser
destroy PatronCommandParser

LibTaskParser --> LogicManager : r
deactivate LibTaskParser

LogicManager -> OverduePatronCommand : execute()
activate OverduePatronCommand

OverduePatronCommand -> Model : updateFilteredPatronList\n(model::hasOverdueBooks)
activate Model

Model --> OverduePatronCommand :
deactivate Model

create CommandResult
OverduePatronCommand -> CommandResult
activate CommandResult

CommandResult --> OverduePatronCommand
deactivate CommandResult

OverduePatronCommand --> LogicManager : result
deactivate OverduePatronCommand

[<--LogicManager
deactivate LogicManager
@enduml
