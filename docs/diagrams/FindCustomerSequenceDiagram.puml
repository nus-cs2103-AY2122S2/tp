@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":TrackBeauParser" as TrackBeauParser LOGIC_COLOR
participant ":FindCustomerCommandParser" as FindCustomerCommandParser LOGIC_COLOR
participant "c:CustomerSearchContainsKeywordsPredicate" as CustomerSearchContainsKeywordsPredicate LOGIC_COLOR
participant "d:FindCustomerCommand" as FindCustomerCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("findc n/Alex Jane")
activate LogicManager

LogicManager -> TrackBeauParser : parseCommand("findc n/Alex Jane")
activate TrackBeauParser

TrackBeauParser -> FindCustomerCommandParser : FindCustomerCommandParser("n/Alex Jane")
activate FindCustomerCommandParser

FindCustomerCommandParser -> CustomerSearchContainsKeywordsPredicate : CustomerSearchContainsKeywordsPredicate(PrefixArr)
activate CustomerSearchContainsKeywordsPredicate
CustomerSearchContainsKeywordsPredicate --> FindCustomerCommandParser : c
deactivate CustomerSearchContainsKeywordsPredicate

FindCustomerCommandParser -> FindCustomerCommand : FindCustomerCommand(customerSearch)
activate FindCustomerCommand
FindCustomerCommand --> FindCustomerCommandParser : d
deactivate FindCustomerCommand

FindCustomerCommandParser --> TrackBeauParser : d
deactivate FindCustomerCommandParser
TrackBeauParser --> LogicManager : d
deactivate TrackBeauParser

LogicManager -> FindCustomerCommand : execute()
activate FindCustomerCommand

FindCustomerCommand -> Model : updateFilteredCustomerList(predicate)
activate Model
Model --> FindCustomerCommand
deactivate Model

create CommandResult
FindCustomerCommand -> CommandResult
activate CommandResult

CommandResult --> FindCustomerCommand
deactivate CommandResult

FindCustomerCommand -> LogicManager : result
deactivate FindCustomerCommand

[<--LogicManager
deactivate LogicManager
@enduml
