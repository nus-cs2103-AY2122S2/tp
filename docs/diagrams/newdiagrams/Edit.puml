@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":EditressBookParser" as AddressBookParser LOGIC_COLOR
participant ":EditCommandParser" as EditCommandParser LOGIC_COLOR
participant "e:EditCommand" as EditCommand LOGIC_COLOR
participant "result:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant "lineupName:LineupName" as LineupName MODEL_COLOR
participant "newLineupName:LineupName" as NewLineupName MODEL_COLOR
end box

[-> LogicManager : execute("Edit L/LINEUP_NAME n/NEW_LINEUP_NAME")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("Edit L/LINEUP_NAME n/NEW_LINEUP_NAME")
activate AddressBookParser

create EditCommandParser
AddressBookParser -> EditCommandParser
activate EditCommandParser

EditCommandParser --> AddressBookParser
deactivate EditCommandParser

AddressBookParser -> EditCommandParser : parse("L/LINEUP_NAME n/NEW_LINEUP_NAME")
activate EditCommandParser

create LineupName
EditCommandParser -> LineupName : LineupName("LINEUP_NAME")
activate LineupName

LineupName --> EditCommandParser : lineupName
deactivate LineupName

create NewLineupName
EditCommandParser -> NewLineupName : LineupName("NEW_LINEUP_NAME")
activate NewLineupName

NewLineupName --> EditCommandParser : newLineupName
deactivate NewLineupName

create EditCommand
EditCommandParser -> EditCommand : EditCommand(lineupName, newLineupName)
activate EditCommand

EditCommand --> EditCommandParser : e
deactivate EditCommand

EditCommandParser --> AddressBookParser : e
deactivate EditCommandParser

EditCommandParser -[hidden]-> AddressBookParser
destroy EditCommandParser

AddressBookParser --> LogicManager : e
deactivate AddressBookParser

LogicManager -> EditCommand : execute()
activate EditCommand

EditCommand -> Model : getLineup(lineupName)
activate Model

Model --> EditCommand : lineup
deactivate Model

EditCommand -> EditCommand : createEditedLineup(lineup, newLineupName)
activate EditCommand

EditCommand --> EditCommand : newLineup
deactivate EditCommand

EditCommand -> Model : setLineup(lineup, newLineup)
activate Model

Model --> EditCommand
deactivate Model

create CommandResult
EditCommand -> CommandResult
activate CommandResult

CommandResult --> EditCommand :result
deactivate CommandResult

EditCommand --> LogicManager : result
deactivate EditCommand

[<--LogicManager
deactivate LogicManager
@enduml
