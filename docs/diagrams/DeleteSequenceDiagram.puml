@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":TrackBeauParser" as TrackBeauParser LOGIC_COLOR
participant ":DeleteCustomerCommandParser" as DeleteCustomerCommandParser LOGIC_COLOR
participant "d:DeleteCustomerCommand" as DeleteCustomerCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("deletec 1,2")
activate LogicManager

LogicManager -> TrackBeauParser : parseCommand("deletec 1,2")
activate TrackBeauParser

create DeleteCustomerCommandParser
TrackBeauParser -> DeleteCustomerCommandParser
activate DeleteCustomerCommandParser

DeleteCustomerCommandParser --> TrackBeauParser
deactivate DeleteCustomerCommandParser

TrackBeauParser -> DeleteCustomerCommandParser : parse("1,2")
activate DeleteCustomerCommandParser

create DeleteCustomerCommand
DeleteCustomerCommandParser -> DeleteCustomerCommand
activate DeleteCustomerCommand

DeleteCustomerCommand --> DeleteCustomerCommandParser : d
deactivate DeleteCustomerCommand

DeleteCustomerCommandParser --> TrackBeauParser : d
deactivate DeleteCustomerCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
DeleteCustomerCommandParser -[hidden]-> TrackBeauParser
destroy DeleteCustomerCommandParser

TrackBeauParser --> LogicManager : d
deactivate TrackBeauParser

LogicManager -> DeleteCustomerCommand : execute()
activate DeleteCustomerCommand

DeleteCustomerCommand -> Model : getFilteredCustomerList()
activate Model
Model --> DeleteCustomerCommand
deactivate Model

DeleteCustomerCommand -> Model : getFilteredBookingList()
activate Model
Model --> DeleteCustomerCommand
deactivate Model

loop for all bookings of the customers \n(index 1 & 2) that is in the future

    DeleteCustomerCommand -> Model : deleteBooking(b)
    activate Model
    Model --> DeleteCustomerCommand
    deactivate Model
end

loop for all customers to delete (index 1 & 2)
    DeleteCustomerCommand -> Model : deleteCustomer(c)
    activate Model
    Model --> DeleteCustomerCommand
    deactivate Model
end

create CommandResult
DeleteCustomerCommand -> CommandResult
activate CommandResult

CommandResult --> DeleteCustomerCommand
deactivate CommandResult

DeleteCustomerCommand --> LogicManager : result
deactivate DeleteCustomerCommand

[<--LogicManager
deactivate LogicManager
@enduml
