@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":HireLahParser" as HireLahParser LOGIC_COLOR
participant ":DeleteCommandParser" as DeleteCommandParser LOGIC_COLOR
participant ":DeleteApplicantCommandParser" as DeleteApplicantCommandParser LOGIC_COLOR
participant "d:DeleteApplicantCommand" as DeleteApplicantCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("delete -a 1")
activate LogicManager

LogicManager -> HireLahParser : parseCommand("delete -a 1")
activate HireLahParser

create DeleteCommandParser
HireLahParser -> DeleteCommandParser
activate DeleteCommandParser

DeleteCommandParser --> HireLahParser
deactivate DeleteCommandParser

HireLahParser -> DeleteCommandParser : parse("-a 1")
activate DeleteCommandParser

create DeleteApplicantCommandParser
DeleteCommandParser -> DeleteApplicantCommandParser
activate DeleteApplicantCommandParser

DeleteApplicantCommandParser --> DeleteCommandParser
deactivate DeleteApplicantCommandParser

DeleteCommandParser -> DeleteApplicantCommandParser : parse("1")
activate DeleteApplicantCommandParser

create DeleteApplicantCommand
DeleteApplicantCommandParser -> DeleteApplicantCommand
activate DeleteApplicantCommand

DeleteApplicantCommand --> DeleteApplicantCommandParser : d
deactivate DeleteApplicantCommand

DeleteApplicantCommandParser --> DeleteCommandParser : d
deactivate DeleteApplicantCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
DeleteApplicantCommandParser -[hidden]-> DeleteCommandParser
destroy DeleteApplicantCommandParser

DeleteCommandParser --> HireLahParser : d
deactivate DeleteCommandParser

'Hidden arrow to position the destroy marker below the end of the activation bar.
DeleteCommandParser -[hidden]-> HireLahParser
destroy DeleteCommandParser

HireLahParser --> LogicManager : d
deactivate HireLahParser

LogicManager -> DeleteApplicantCommand : execute()
activate DeleteApplicantCommand

DeleteApplicantCommand -> Model : getFilteredApplicantList()
activate Model
Model --> DeleteApplicantCommand
deactivate Model

DeleteApplicantCommand -> Model : getApplicantInterviews(applicantToDelete)
activate Model
Model --> DeleteApplicantCommand
deactivate Model

DeleteApplicantCommand -> Model : deleteApplicant(applicantToDelete)
activate Model
Model --> DeleteApplicantCommand
deactivate

loop interviewsToDelete.size()
    DeleteApplicantCommand -> Model : deleteInterview(i)
    activate Model
    Model --> DeleteApplicantCommand
    deactivate
end






create CommandResult
DeleteApplicantCommand -> CommandResult
activate CommandResult

CommandResult --> DeleteApplicantCommand
deactivate CommandResult

DeleteApplicantCommand --> LogicManager : result
deactivate DeleteApplicantCommand

[<--LogicManager
deactivate LogicManager
@enduml
