@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":LinkedoutParser" as LinkedoutParser LOGIC_COLOR
participant ":EditCommandParser" as EditCommandParser LOGIC_COLOR
participant "d:EditCommand" as EditCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("edit 1 n/Alex Tan")
activate LogicManager

LogicManager -> LinkedoutParser : parseCommand("edit 1 n/Alex Tan")
activate LinkedoutParser

create EditCommandParser
LinkedoutParser -> EditCommandParser
activate EditCommandParser

EditCommandParser --> LinkedoutParser
deactivate EditCommandParser

LinkedoutParser -> EditCommandParser : parse(" 1 n/Alex Tan")
activate EditCommandParser

create EditCommand
EditCommandParser -> EditCommand
activate EditCommand

EditCommand --> EditCommandParser : d
deactivate EditCommand

EditCommandParser --> LinkedoutParser : d
deactivate EditCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
EditCommandParser -[hidden]-> LinkedoutParser
destroy EditCommandParser

LinkedoutParser --> LogicManager : d
deactivate LinkedoutParser

LogicManager -> EditCommand : execute()
activate EditCommand

EditCommand -> Model : getDefaultApplicantList()
activate Model

Model --> EditCommand
deactivate Model

EditCommand -> Model : setApplicant(applicantToEdit, \n editedApplicant)
activate Model

Model --> EditCommand
deactivate Model

EditCommand -> Model : updateFilteredApplicantList()
activate Model

Model --> EditCommand
deactivate Model

create CommandResult
EditCommand -> CommandResult
activate CommandResult

CommandResult --> EditCommand
deactivate CommandResult

EditCommand --> LogicManager : result
deactivate EditCommand

[<--LogicManager
deactivate LogicManager
@enduml
