@startuml
!include style.puml

skinparam sequenceGroupFontSize 20
skinparam sequenceGroupHeaderFontSize 20

skinparam sequence {
activityArrowFontSize 16
ActorFontSize 18
ParticipantFontSize 18
}

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":TeachWhatParser" as TeachWhatParser LOGIC_COLOR
participant ":AddStudentCommandParser" as AddStudentCommandParser LOGIC_COLOR
participant ":AddStudentCommand" as AddStudentCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
participant ":Student" as Student LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("addstudent -n Samuel \n -p 64874982 \n -e simp4raiden@gmail.com \n -a 6 Raffles Quay Singapore, 048580 Singapore \n -t struggling in math -t good in cs")
activate LogicManager

LogicManager -> TeachWhatParser : parseCommand("addstudent -n Samuel \n -p 64874982 \n -e simp4raiden@gmail.com \n -a 6 Raffles Quay Singapore, 048580 Singapore \n -t struggling in math -t good in cs")
activate TeachWhatParser

create AddStudentCommandParser
TeachWhatParser -> AddStudentCommandParser
activate AddStudentCommandParser

AddStudentCommandParser --> TeachWhatParser
deactivate AddStudentCommandParser

TeachWhatParser -> AddStudentCommandParser : parse("-n Samuel \n -p 64874982 \n -e simp4raiden@gmail.com \n -a 6 Raffles Quay Singapore, 048580 Singapore \n -t struggling in math -t good in cs")
activate AddStudentCommandParser

create Student
AddStudentCommandParser -> Student
activate Student
Student --> AddStudentCommandParser : Student
deactivate Student

create AddStudentCommand
AddStudentCommandParser -> AddStudentCommand : Student
activate AddStudentCommand

AddStudentCommand --> AddStudentCommandParser : AddStudentCommand
deactivate AddStudentCommand

AddStudentCommandParser --> TeachWhatParser : AddStudentCommand
deactivate AddStudentCommandParser

TeachWhatParser --> LogicManager : Command
deactivate TeachWhatParser

newpage

LogicManager -> AddStudentCommand : execute()
activate AddStudentCommand

AddStudentCommand -> Model : hasStudent(student)
activate Model
alt duplicate student name
    Model --> AddStudentCommand : true
    [<--AddStudentCommand : ParseException
else "else"
     Model --> AddStudentCommand : false
end
deactivate Model

AddStudentCommand -> Model : addStudent(student)
activate Model
deactivate Model

AddStudentCommand -> Model : setSelectedStudent(student)
activate Model
deactivate Model

create CommandResult
AddStudentCommand -> CommandResult
activate CommandResult

CommandResult --> AddStudentCommand : CommandResult
deactivate CommandResult

AddStudentCommand --> LogicManager : CommandResult
deactivate AddStudentCommand

[<--LogicManager : CommandResult
deactivate LogicManager
@enduml
