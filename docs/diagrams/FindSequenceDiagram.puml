@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":HomePageParser" as HomePageParser LOGIC_COLOR
participant ":FindCommandParser" as FindCommandParser LOGIC_COLOR
participant "f:FindCommand" as FindCommand LOGIC_COLOR
participant "c:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "model:Model" as model MODEL_COLOR
participant "predicate:\nFieldContainsKeywordsPredicate"  as FieldContainsKeywordsPredicate MODEL_COLOR
end box

[-> LogicManager : executeHomePageCommand\n(find n/alex)
activate LogicManager

LogicManager -> HomePageParser : parseCommand\n(find n/alex)
activate HomePageParser

HomePageParser -> FindCommandParser** : FindCommandParser()
activate FindCommandParser
HomePageParser <-- FindCommandParser
deactivate FindCommandParser

HomePageParser -> FindCommandParser : parse\n(n/alex)
activate FindCommandParser

FindCommandParser -> FieldContainsKeywordsPredicate** : FieldContainsKeywordsPredicate(keywords, field)
activate FieldContainsKeywordsPredicate
FieldContainsKeywordsPredicate --> FindCommandParser :predicate
deactivate FieldContainsKeywordsPredicate

FindCommandParser -> FindCommand** :FindCommand(predicate))
activate FindCommand
FindCommandParser <-- FindCommand :f
deactivate FindCommand

HomePageParser <-- FindCommandParser :f
deactivate FindCommandParser
LogicManager <-- HomePageParser :f
deactivate HomePageParser
LogicManager -> FindCommand : execute(model)
activate FindCommand

FindCommand -> model : updateFilteredPersonList\n(predicate)
activate model
loop For each person in address book
model -> FieldContainsKeywordsPredicate : test(person)
activate FieldContainsKeywordsPredicate
deactivate FieldContainsKeywordsPredicate
end
FindCommand -> model : getFilteredPersonList()
model --> FindCommand :filteredPersonList
deactivate model
FindCommand -> CommandResult** : commandResult(message, filteredPersonList)
activate CommandResult
FindCommand <-- CommandResult :c
deactivate CommandResult
LogicManager <-- FindCommand :c
deactivate FindCommand
<-- LogicManager :c
deactivate LogicManager
@enduml
